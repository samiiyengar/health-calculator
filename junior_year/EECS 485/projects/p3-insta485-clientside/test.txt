============================= test session starts ==============================
platform darwin -- Python 3.8.5, pytest-6.2.5, py-1.10.0, pluggy-1.0.0 -- /Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/env/bin/python3
cachedir: .pytest_cache
rootdir: /Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside
collecting ... collected 42 items

test_selenium_hello.py::test_selenium_hello PASSED                       [  2%]
tests/test_index.py::test_anything PASSED                                [  4%]
tests/test_index.py::test_login PASSED                                   [  7%]
tests/test_index.py::test_login ERROR                                    [  7%]
tests/test_index.py::test_feed_load FAILED                               [  9%]
tests/test_index.py::test_feed_load ERROR                                [  9%]
tests/test_index.py::test_new_comment FAILED                             [ 11%]
tests/test_index.py::test_new_comment ERROR                              [ 11%]
tests/test_index.py::test_delete_comment FAILED                          [ 14%]
tests/test_index.py::test_delete_comment ERROR                           [ 14%]
tests/test_index.py::test_new_comment_delete FAILED                      [ 16%]
tests/test_index.py::test_new_comment_delete ERROR                       [ 16%]
tests/test_index.py::test_like_unlike FAILED                             [ 19%]
tests/test_index.py::test_like_unlike ERROR                              [ 19%]
tests/test_index.py::test_double_click_like FAILED                       [ 21%]
tests/test_index.py::test_double_click_like ERROR                        [ 21%]
tests/test_index.py::test_refresh FAILED                                 [ 23%]
tests/test_index.py::test_refresh ERROR                                  [ 23%]
tests/test_index.py::test_html FAILED                                    [ 26%]
tests/test_index.py::test_html ERROR                                     [ 26%]
tests/test_rest_api_likes_and_comments.py::test_likes_delete PASSED      [ 28%]
tests/test_rest_api_likes_and_comments.py::test_likes_post PASSED        [ 30%]
tests/test_rest_api_likes_and_comments.py::test_likes_error PASSED       [ 33%]
tests/test_rest_api_likes_and_comments.py::test_comments_post PASSED     [ 35%]
tests/test_rest_api_likes_and_comments.py::test_comments_delete PASSED   [ 38%]
tests/test_rest_api_posts.py::test_posts_list PASSED                     [ 40%]
tests/test_rest_api_posts.py::test_posts_detail PASSED                   [ 42%]
tests/test_rest_api_posts.py::test_posts_autoincrement PASSED            [ 45%]
tests/test_rest_api_posts.py::test_posts_pagination_simple PASSED        [ 47%]
tests/test_rest_api_posts.py::test_posts_pagination_page_size PASSED     [ 50%]
tests/test_rest_api_posts.py::test_posts_pagination_upload_between_requests PASSED [ 52%]
tests/test_rest_api_posts.py::test_posts_pagination_errors PASSED        [ 54%]
tests/test_rest_api_simple.py::test_resources PASSED                     [ 57%]
tests/test_rest_api_simple.py::test_login_session PASSED                 [ 59%]
tests/test_rest_api_simple.py::test_http_basic_auth PASSED               [ 61%]
tests/test_scripts.py::test_executables PASSED                           [ 64%]
tests/test_scripts.py::test_insta485install PASSED                       [ 66%]
tests/test_scripts.py::test_insta485db_random PASSED                     [ 69%]
tests/test_scroll.py::test_infinite_scroll FAILED                        [ 71%]
tests/test_scroll.py::test_infinite_scroll_many FAILED                   [ 73%]
tests/test_scroll.py::test_scroll_refresh FAILED                         [ 76%]
tests/test_slow_server_index.py::test_delay PASSED                       [ 78%]
tests/test_slow_server_index.py::test_login PASSED                       [ 80%]
tests/test_slow_server_index.py::test_feed_load FAILED                   [ 83%]
tests/test_slow_server_index.py::test_feed_load ERROR                    [ 83%]
tests/test_slow_server_index.py::test_new_comment FAILED                 [ 85%]
tests/test_slow_server_index.py::test_new_comment ERROR                  [ 85%]
tests/test_slow_server_index.py::test_like_unlike FAILED                 [ 88%]
tests/test_slow_server_index.py::test_like_unlike ERROR                  [ 88%]
tests/test_slow_server_index.py::test_refresh FAILED                     [ 90%]
tests/test_slow_server_index.py::test_refresh ERROR                      [ 90%]
tests/test_style.py::test_pycodestyle FAILED                             [ 92%]
tests/test_style.py::test_pydocstyle FAILED                              [ 95%]
tests/test_style.py::test_pylint FAILED                                  [ 97%]
tests/test_style.py::test_eslint FAILED                                  [100%]

==================================== ERRORS ====================================
_______________________ ERROR at teardown of test_login ________________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:50875/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:50875/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:50875/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:19] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:19] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:20] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:20] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:20] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:20] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "POST /shutdown/ HTTP/1.1" 200 -
_____________________ ERROR at teardown of test_feed_load ______________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:50933/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:50933/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:50933/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:33] "POST /shutdown/ HTTP/1.1" 200 -
____________________ ERROR at teardown of test_new_comment _____________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:50989/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:50989/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:50989/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:33] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:33] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:46] "POST /shutdown/ HTTP/1.1" 200 -
___________________ ERROR at teardown of test_delete_comment ___________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51045/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51045/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51045/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:46] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:46] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:58] "POST /shutdown/ HTTP/1.1" 200 -
_________________ ERROR at teardown of test_new_comment_delete _________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51101/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51101/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51101/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:59] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:59] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:11] "POST /shutdown/ HTTP/1.1" 200 -
____________________ ERROR at teardown of test_like_unlike _____________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51161/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51161/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51161/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:12] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:12] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:24] "POST /shutdown/ HTTP/1.1" 200 -
_________________ ERROR at teardown of test_double_click_like __________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51219/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51219/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51219/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:24] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:24] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:37] "POST /shutdown/ HTTP/1.1" 200 -
______________________ ERROR at teardown of test_refresh _______________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51275/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51275/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51275/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:37] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:37] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:49] "POST /shutdown/ HTTP/1.1" 200 -
________________________ ERROR at teardown of test_html ________________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51332/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51332/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51332/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:49] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:01] "POST /shutdown/ HTTP/1.1" 200 -
_____________________ ERROR at teardown of test_feed_load ______________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51517/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51517/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51517/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:14] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:14] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:16] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:17] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:17] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:38] "POST /shutdown/ HTTP/1.1" 200 -
____________________ ERROR at teardown of test_new_comment _____________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51573/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51573/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51573/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:39] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:39] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:42] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:42] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:03] "POST /shutdown/ HTTP/1.1" 200 -
____________________ ERROR at teardown of test_like_unlike _____________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51631/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51631/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51631/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:04] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:04] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:07] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:07] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:28] "POST /shutdown/ HTTP/1.1" 200 -
______________________ ERROR at teardown of test_refresh _______________________

chromedriver_path = PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:51689/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)
E       assert not ['http://localhost:51689/static - Failed to load resource: the server responded with a status of 404 (NOT FOUND)']

tests/conftest.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51689/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:28] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:28] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:31] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:31] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:52] "POST /shutdown/ HTTP/1.1" 200 -
=================================== FAILURES ===================================
________________________________ test_feed_load ________________________________

live_server = <conftest.LiveServer object at 0x7f8f512aa250>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="6a968613fcff6e04261676a958d8f001")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="6a968613fcff6e04261676a958d8f001")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="6a968613fcff6e04261676a958d8f001")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="6a968613fcff6e04261676a958d8f001")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:50933/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:21] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:23] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_______________________________ test_new_comment _______________________________

live_server = <conftest.LiveServer object at 0x7f8f5118adc0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="6e164c7af09f3f76ecf629f1eccb8423")>

    def test_new_comment(live_server, driver):
        """Verify new comment appears without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f5118adc0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="6e164c7af09f3f76ecf629f1eccb8423")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="6e164c7af09f3f76ecf629f1eccb8423")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="6e164c7af09f3f76ecf629f1eccb8423")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="6e164c7af09f3f76ecf629f1eccb8423")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:50989/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:33] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:33] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:35] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_____________________________ test_delete_comment ______________________________

live_server = <conftest.LiveServer object at 0x7f8f5172c5e0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="b31308465329f496c8098daceecb9699")>

    def test_delete_comment(live_server, driver):
        """Verify delete comment button works properly.
    
        live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:197: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f5172c5e0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="b31308465329f496c8098daceecb9699")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="b31308465329f496c8098daceecb9699")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="b31308465329f496c8098daceecb9699")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="b31308465329f496c8098daceecb9699")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51045/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:46] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:46] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:47] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:48] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
___________________________ test_new_comment_delete ____________________________

live_server = <conftest.LiveServer object at 0x7f8f5118a460>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="95367137419f3f72f0e292d7e9694d3c")>

    def test_new_comment_delete(live_server, driver):
        """Verify new comment appears without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f5118a460>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="95367137419f3f72f0e292d7e9694d3c")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="95367137419f3f72f0e292d7e9694d3c")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="95367137419f3f72f0e292d7e9694d3c")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="95367137419f3f72f0e292d7e9694d3c")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51101/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:59] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:49:59] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:01] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_______________________________ test_like_unlike _______________________________

live_server = <conftest.LiveServer object at 0x7f8f517143a0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="7991776d014a25e665a4fbce9f22110d")>

    def test_like_unlike(live_server, driver):
        """Verify like/unlike button behavior without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f517143a0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="7991776d014a25e665a4fbce9f22110d")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="7991776d014a25e665a4fbce9f22110d")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="7991776d014a25e665a4fbce9f22110d")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="7991776d014a25e665a4fbce9f22110d")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51161/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:12] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:12] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:14] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
____________________________ test_double_click_like ____________________________

live_server = <conftest.LiveServer object at 0x7f8f51732190>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="956fecdd725964c5a68743933375e505")>

    def test_double_click_like(live_server, driver):
        """
        Verify double clicking on an unliked image likes the image.
    
        Load main page, unlike first image, perform two double clicks on it,
        the first of which should like the image, the second should have no effect.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:370: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f51732190>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="956fecdd725964c5a68743933375e505")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="956fecdd725964c5a68743933375e505")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="956fecdd725964c5a68743933375e505")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="956fecdd725964c5a68743933375e505")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51219/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:24] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:24] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:26] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_________________________________ test_refresh _________________________________

live_server = <conftest.LiveServer object at 0x7f8f51732af0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="384489862daab099a05295c8e9ed4457")>

    def test_refresh(live_server, driver):
        """Verify refresh with content from another client.
    
        Load main page, create new post via another client, refresh the page,
        make sure both old posts and new post appear.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:470: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f51732af0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="384489862daab099a05295c8e9ed4457")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="384489862daab099a05295c8e9ed4457")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="384489862daab099a05295c8e9ed4457")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="384489862daab099a05295c8e9ed4457")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51275/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:37] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:37] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:38] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:39] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
__________________________________ test_html ___________________________________

live_server = <conftest.LiveServer object at 0x7f8f51736dc0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="4f768f417bf8fdce8f1dc89b7c0576f3")>

    def test_html(live_server, driver):
        """Verify HTML5 compliance in HTML portion of the index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:505: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f51736dc0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="4f768f417bf8fdce8f1dc89b7c0576f3")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="4f768f417bf8fdce8f1dc89b7c0576f3")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="4f768f417bf8fdce8f1dc89b7c0576f3")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="4f768f417bf8fdce8f1dc89b7c0576f3")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51332/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:49] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:50:51] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_____________________________ test_infinite_scroll _____________________________

live_server = <conftest.LiveServer object at 0x7f8f517141c0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="175a9f2151c02f4ec6e14d94b19f2c5a")>

    def test_infinite_scroll(live_server, driver):
        """Test infinite scroll.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 11 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(11):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
>           assert response.status_code == 200
E           assert 400 == 200
E             +400
E             -200

tests/test_scroll.py:61: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51388/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:03] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:03] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "[31m[1mPOST /posts/ HTTP/1.1[0m" 400 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "POST /shutdown/ HTTP/1.1" 200 -
__________________________ test_infinite_scroll_many ___________________________

live_server = <conftest.LiveServer object at 0x7f8f51729670>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="b203974f1ecad65656b038d1c6d72f48")>

    def test_infinite_scroll_many(live_server, driver):
        """Test many infinite scrolls.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 30 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(30):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
>           assert response.status_code == 200
E           assert 400 == 200
E             +400
E             -200

tests/test_scroll.py:129: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51411/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:04] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "[31m[1mPOST /posts/ HTTP/1.1[0m" 400 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "POST /shutdown/ HTTP/1.1" 200 -
_____________________________ test_scroll_refresh ______________________________

live_server = <conftest.LiveServer object at 0x7f8f512aa1c0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="a36fcd04f143a60eeac1e197742c4bc7")>

    def test_scroll_refresh(live_server, driver):
        """Test infinite scroll with refresh afterward.
    
        Go to main page, scroll to trigger infinite scroll, make a post from
        background, refresh the page, make sure only 10 posts appear including
        the previously made, new post.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 11 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(11):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
>           assert response.status_code == 200
E           assert 400 == 200
E             +400
E             -200

tests/test_scroll.py:226: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51434/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:06] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "[31m[1mPOST /posts/ HTTP/1.1[0m" 400 -
---------------------------- Captured log teardown -----------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:08] "POST /shutdown/ HTTP/1.1" 200 -
________________________________ test_feed_load ________________________________

slow_live_server = <conftest.LiveServer object at 0x7f8f5172cb20>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="18f9a5c266a8ac089e25adb731f2ab43")>

    def test_feed_load(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_feed_load(slow_live_server, slow_driver)

tests/test_slow_server_index.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f5172cb20>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="18f9a5c266a8ac089e25adb731f2ab43")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="18f9a5c266a8ac089e25adb731f2ab43")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="18f9a5c266a8ac089e25adb731f2ab43")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="18f9a5c266a8ac089e25adb731f2ab43")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51517/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:14] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:14] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:15] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:16] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:17] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:17] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:18] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_______________________________ test_new_comment _______________________________

slow_live_server = <conftest.LiveServer object at 0x7f8f5171d760>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="d7ef08cf33894a7c6ac85aef5c914e84")>

    def test_new_comment(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_new_comment(slow_live_server, slow_driver)

tests/test_slow_server_index.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:157: in test_new_comment
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f5171d760>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="d7ef08cf33894a7c6ac85aef5c914e84")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="d7ef08cf33894a7c6ac85aef5c914e84")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="d7ef08cf33894a7c6ac85aef5c914e84")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="d7ef08cf33894a7c6ac85aef5c914e84")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51573/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:39] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:39] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:40] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:41] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:42] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:42] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:51:43] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_______________________________ test_like_unlike _______________________________

slow_live_server = <conftest.LiveServer object at 0x7f8f512aa460>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="a9574a1cc65722ddf286edaf1e754360")>

    def test_like_unlike(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_like_unlike(slow_live_server, slow_driver)

tests/test_slow_server_index.py:99: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:319: in test_like_unlike
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f512aa460>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="a9574a1cc65722ddf286edaf1e754360")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="a9574a1cc65722ddf286edaf1e754360")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="a9574a1cc65722ddf286edaf1e754360")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="a9574a1cc65722ddf286edaf1e754360")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51631/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:04] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:04] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:06] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:07] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:07] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:08] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_________________________________ test_refresh _________________________________

slow_live_server = <conftest.LiveServer object at 0x7f8f513fbac0>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="bf385ae1cc3fd6ec190e386166926b21")>

    def test_refresh(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_refresh(slow_live_server, slow_driver)

tests/test_slow_server_index.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:470: in test_refresh
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x7f8f513fbac0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="bf385ae1cc3fd6ec190e386166926b21")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements_by_tag_name("script")
        script_element = driver.find_element_by_tag_name("script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
        assert driver.find_elements_by_xpath("//a[@href='/posts/1/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/2/']")
        assert driver.find_elements_by_xpath("//a[@href='/posts/3/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/awdeorio/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/jflinn/']")
        assert driver.find_elements_by_xpath("//a[@href='/users/michjc/']")
    
        # Verify images
>       assert driver.find_elements_by_xpath(  # Flinn
            "//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']"
        )
E       assert []
E        +  where [] = <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="bf385ae1cc3fd6ec190e386166926b21")>>("//img[@src='/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg']")
E        +    where <bound method WebDriver.find_elements_by_xpath of <selenium.webdriver.chrome.webdriver.WebDriver (session="bf385ae1cc3fd6ec190e386166926b21")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="bf385ae1cc3fd6ec190e386166926b21")>.find_elements_by_xpath

tests/test_index.py:100: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
------------------------------ Captured log setup ------------------------------
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:51689/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:28] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:28] "GET /accounts/login/ HTTP/1.1" 200 -
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/css/style.css HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/images/instagramlogo.png HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[32mPOST /accounts/login/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[36mGET /static/css/style.css HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:30] "[36mGET /static/images/instagramlogo.png HTTP/1.1[0m" 304 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:31] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:31] "GET /api/v1/posts/3/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /api/v1/posts/2/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /api/v1/posts/1/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "[33mGET /static HTTP/1.1[0m" 404 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [15/Oct/2021 20:52:32] "GET /static/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg HTTP/1.1" 200 -
_______________________________ test_pycodestyle _______________________________

    def test_pycodestyle():
        """Run pycodestyle."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run(["pycodestyle", "setup.py", "insta485"], check=True)

tests/test_style.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pycodestyle', 'setup.py', 'insta485'],), kwargs = {}
process = <subprocess.Popen object at 0x7f8f5172a3a0>, stdout = None
stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pycodestyle', 'setup.py', 'insta485']' returned non-zero exit status 1.

/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
insta485/__init__.py:22:1: E402 module level import not at top of file
insta485/__init__.py:22:20: E261 at least two spaces before inline comment
insta485/__init__.py:22:21: E262 inline comment should start with '# '
insta485/__init__.py:25:1: W391 blank line at end of file
insta485/config.py:9:80: E501 line too long (88 > 79 characters)
insta485/config.py:19:59: W292 no newline at end of file
insta485/model.py:45:26: W292 no newline at end of file
insta485/api/posts.py:17:1: E302 expected 2 blank lines, found 1
insta485/api/posts.py:24:1: E302 expected 2 blank lines, found 1
insta485/api/posts.py:25:1: E101 indentation contains mixed spaces and tabs
insta485/api/posts.py:25:1: W191 indentation contains tabs
insta485/api/posts.py:26:1: W191 indentation contains tabs
insta485/api/posts.py:27:1: W191 indentation contains tabs
insta485/api/posts.py:28:1: W191 indentation contains tabs
insta485/api/posts.py:29:1: W191 indentation contains tabs
insta485/api/posts.py:30:1: W191 indentation contains tabs
insta485/api/posts.py:31:1: W191 indentation contains tabs
insta485/api/posts.py:32:1: W191 indentation contains tabs
insta485/api/posts.py:32:4: E722 do not use bare 'except'
insta485/api/posts.py:33:1: W191 indentation contains tabs
insta485/api/posts.py:33:80: E501 line too long (81 > 79 characters)
insta485/api/posts.py:35:1: W191 indentation contains tabs
insta485/api/posts.py:36:1: W191 indentation contains tabs
insta485/api/posts.py:38:1: W191 indentation contains tabs
insta485/api/posts.py:39:1: W191 indentation contains tabs
insta485/api/posts.py:40:1: W191 indentation contains tabs
insta485/api/posts.py:41:1: W191 indentation contains tabs
insta485/api/posts.py:42:1: W191 indentation contains tabs
insta485/api/posts.py:43:1: W191 indentation contains tabs
insta485/api/posts.py:45:1: W191 indentation contains tabs
insta485/api/posts.py:47:1: W191 indentation contains tabs
insta485/api/posts.py:47:12: E711 comparison to None should be 'if cond is None:'
insta485/api/posts.py:48:1: W191 indentation contains tabs
insta485/api/posts.py:48:80: E501 line too long (86 > 79 characters)
insta485/api/posts.py:49:1: W191 indentation contains tabs
insta485/api/posts.py:49:1: W293 blank line contains whitespace
insta485/api/posts.py:50:1: W191 indentation contains tabs
insta485/api/posts.py:52:1: W191 indentation contains tabs
insta485/api/posts.py:53:1: W191 indentation contains tabs
insta485/api/posts.py:55:1: E302 expected 2 blank lines, found 1
insta485/api/posts.py:57:1: W191 indentation contains tabs
insta485/api/posts.py:59:1: W191 indentation contains tabs
insta485/api/posts.py:60:1: W191 indentation contains tabs
insta485/api/posts.py:61:1: W191 indentation contains tabs
insta485/api/posts.py:62:1: W191 indentation contains tabs
insta485/api/posts.py:63:1: W191 indentation contains tabs
insta485/api/posts.py:64:1: W191 indentation contains tabs
insta485/api/posts.py:66:1: W191 indentation contains tabs
insta485/api/posts.py:72:1: W191 indentation contains tabs
insta485/api/posts.py:74:1: W191 indentation contains tabs
insta485/api/posts.py:76:1: W191 indentation contains tabs
insta485/api/posts.py:76:41: W291 trailing whitespace
insta485/api/posts.py:77:1: W191 indentation contains tabs
insta485/api/posts.py:78:1: W191 indentation contains tabs
insta485/api/posts.py:78:80: E501 line too long (105 > 79 characters)
insta485/api/posts.py:79:1: W191 indentation contains tabs
insta485/api/posts.py:79:32: W291 trailing whitespace
insta485/api/posts.py:81:1: W191 indentation contains tabs
insta485/api/posts.py:82:1: W191 indentation contains tabs
insta485/api/posts.py:83:1: W191 indentation contains tabs
insta485/api/posts.py:85:1: W191 indentation contains tabs
insta485/api/posts.py:86:1: W191 indentation contains tabs
insta485/api/posts.py:88:1: W191 indentation contains tabs
insta485/api/posts.py:89:1: W191 indentation contains tabs
insta485/api/posts.py:89:41: W291 trailing whitespace
insta485/api/posts.py:90:1: W191 indentation contains tabs
insta485/api/posts.py:91:1: W191 indentation contains tabs
insta485/api/posts.py:92:1: W191 indentation contains tabs
insta485/api/posts.py:93:1: W191 indentation contains tabs
insta485/api/posts.py:94:1: W191 indentation contains tabs
insta485/api/posts.py:94:29: W291 trailing whitespace
insta485/api/posts.py:95:1: W191 indentation contains tabs
insta485/api/posts.py:95:8: E128 continuation line under-indented for visual indent
insta485/api/posts.py:95:80: E501 line too long (90 > 79 characters)
insta485/api/posts.py:96:1: W191 indentation contains tabs
insta485/api/posts.py:98:1: W191 indentation contains tabs
insta485/api/posts.py:99:1: W191 indentation contains tabs
insta485/api/posts.py:100:1: W191 indentation contains tabs
insta485/api/posts.py:101:1: W191 indentation contains tabs
insta485/api/posts.py:102:1: W191 indentation contains tabs
insta485/api/posts.py:103:1: W191 indentation contains tabs
insta485/api/posts.py:104:1: W191 indentation contains tabs
insta485/api/posts.py:105:1: W191 indentation contains tabs
insta485/api/posts.py:106:1: W191 indentation contains tabs
insta485/api/posts.py:107:1: W191 indentation contains tabs
insta485/api/posts.py:107:80: E501 line too long (84 > 79 characters)
insta485/api/posts.py:108:1: W191 indentation contains tabs
insta485/api/posts.py:109:1: W191 indentation contains tabs
insta485/api/posts.py:110:1: W191 indentation contains tabs
insta485/api/posts.py:111:1: W191 indentation contains tabs
insta485/api/posts.py:111:80: E501 line too long (81 > 79 characters)
insta485/api/posts.py:112:1: W191 indentation contains tabs
insta485/api/posts.py:113:1: W191 indentation contains tabs
insta485/api/posts.py:114:1: W191 indentation contains tabs
insta485/api/posts.py:115:1: W191 indentation contains tabs
insta485/api/posts.py:117:1: W191 indentation contains tabs
insta485/api/posts.py:118:1: W191 indentation contains tabs
insta485/api/posts.py:119:1: W191 indentation contains tabs
insta485/api/posts.py:120:1: W191 indentation contains tabs
insta485/api/posts.py:121:1: W191 indentation contains tabs
insta485/api/posts.py:122:1: W191 indentation contains tabs
insta485/api/posts.py:123:1: W191 indentation contains tabs
insta485/api/posts.py:123:80: E501 line too long (86 > 79 characters)
insta485/api/posts.py:124:1: W191 indentation contains tabs
insta485/api/posts.py:124:3: E722 do not use bare 'except'
insta485/api/posts.py:125:1: W191 indentation contains tabs
insta485/api/posts.py:127:1: W191 indentation contains tabs
insta485/api/posts.py:128:1: W191 indentation contains tabs
insta485/api/posts.py:129:1: W191 indentation contains tabs
insta485/api/posts.py:130:1: W191 indentation contains tabs
insta485/api/posts.py:131:1: W191 indentation contains tabs
insta485/api/posts.py:133:1: W191 indentation contains tabs
insta485/api/posts.py:134:1: W191 indentation contains tabs
insta485/api/posts.py:135:1: W191 indentation contains tabs
insta485/api/posts.py:135:1: W293 blank line contains whitespace
insta485/api/posts.py:136:1: W191 indentation contains tabs
insta485/api/posts.py:136:80: E501 line too long (88 > 79 characters)
insta485/api/posts.py:137:1: W191 indentation contains tabs
insta485/api/posts.py:138:1: W191 indentation contains tabs
insta485/api/posts.py:139:1: W191 indentation contains tabs
insta485/api/posts.py:140:1: W191 indentation contains tabs
insta485/api/posts.py:141:1: W191 indentation contains tabs
insta485/api/posts.py:143:1: W191 indentation contains tabs
insta485/api/posts.py:145:1: W191 indentation contains tabs
insta485/api/posts.py:146:1: W191 indentation contains tabs
insta485/api/posts.py:147:1: W191 indentation contains tabs
insta485/api/posts.py:148:1: W191 indentation contains tabs
insta485/api/posts.py:149:1: W191 indentation contains tabs
insta485/api/posts.py:149:80: E501 line too long (97 > 79 characters)
insta485/api/posts.py:151:1: W191 indentation contains tabs
insta485/api/posts.py:152:1: W191 indentation contains tabs
insta485/api/posts.py:153:1: W191 indentation contains tabs
insta485/api/posts.py:154:1: W191 indentation contains tabs
insta485/api/posts.py:155:1: W191 indentation contains tabs
insta485/api/posts.py:157:1: W191 indentation contains tabs
insta485/api/posts.py:161:1: E303 too many blank lines (3)
insta485/api/posts.py:164:1: W191 indentation contains tabs
insta485/api/posts.py:166:1: W191 indentation contains tabs
insta485/api/posts.py:168:1: W191 indentation contains tabs
insta485/api/posts.py:169:1: W191 indentation contains tabs
insta485/api/posts.py:170:1: W191 indentation contains tabs
insta485/api/posts.py:171:1: W191 indentation contains tabs
insta485/api/posts.py:171:34: E231 missing whitespace after ':'
insta485/api/posts.py:173:1: W191 indentation contains tabs
insta485/api/posts.py:173:41: W291 trailing whitespace
insta485/api/posts.py:174:1: W191 indentation contains tabs
insta485/api/posts.py:174:27: W291 trailing whitespace
insta485/api/posts.py:175:1: W191 indentation contains tabs
insta485/api/posts.py:175:8: E128 continuation line under-indented for visual indent
insta485/api/posts.py:176:1: W191 indentation contains tabs
insta485/api/posts.py:178:1: W191 indentation contains tabs
insta485/api/posts.py:179:1: W191 indentation contains tabs
insta485/api/posts.py:180:1: W191 indentation contains tabs
insta485/api/posts.py:181:1: W191 indentation contains tabs
insta485/api/posts.py:182:1: W191 indentation contains tabs
insta485/api/posts.py:183:1: W191 indentation contains tabs
insta485/api/posts.py:184:1: W191 indentation contains tabs
insta485/api/posts.py:185:1: W191 indentation contains tabs
insta485/api/posts.py:186:1: W191 indentation contains tabs
insta485/api/posts.py:186:80: E501 line too long (83 > 79 characters)
insta485/api/posts.py:187:1: W191 indentation contains tabs
insta485/api/posts.py:188:1: W191 indentation contains tabs
insta485/api/posts.py:189:1: W191 indentation contains tabs
insta485/api/posts.py:190:1: W191 indentation contains tabs
insta485/api/posts.py:190:80: E501 line too long (80 > 79 characters)
insta485/api/posts.py:191:1: W191 indentation contains tabs
insta485/api/posts.py:192:1: W191 indentation contains tabs
insta485/api/posts.py:193:1: W191 indentation contains tabs
insta485/api/posts.py:194:1: W191 indentation contains tabs
insta485/api/posts.py:196:1: W191 indentation contains tabs
insta485/api/posts.py:197:1: W191 indentation contains tabs
insta485/api/posts.py:198:1: W191 indentation contains tabs
insta485/api/posts.py:199:1: W191 indentation contains tabs
insta485/api/posts.py:200:1: W191 indentation contains tabs
insta485/api/posts.py:201:1: W191 indentation contains tabs
insta485/api/posts.py:202:1: W191 indentation contains tabs
insta485/api/posts.py:202:80: E501 line too long (85 > 79 characters)
insta485/api/posts.py:203:1: W191 indentation contains tabs
insta485/api/posts.py:203:2: E722 do not use bare 'except'
insta485/api/posts.py:204:1: W191 indentation contains tabs
insta485/api/posts.py:205:1: W191 indentation contains tabs
insta485/api/posts.py:206:1: W191 indentation contains tabs
insta485/api/posts.py:207:1: W191 indentation contains tabs
insta485/api/posts.py:208:1: W191 indentation contains tabs
insta485/api/posts.py:209:1: W191 indentation contains tabs
insta485/api/posts.py:210:1: W191 indentation contains tabs
insta485/api/posts.py:211:1: W191 indentation contains tabs
insta485/api/posts.py:213:1: W191 indentation contains tabs
insta485/api/posts.py:213:80: E501 line too long (87 > 79 characters)
insta485/api/posts.py:214:1: W191 indentation contains tabs
insta485/api/posts.py:215:1: W191 indentation contains tabs
insta485/api/posts.py:216:1: W191 indentation contains tabs
insta485/api/posts.py:217:1: W191 indentation contains tabs
insta485/api/posts.py:218:1: W191 indentation contains tabs
insta485/api/posts.py:220:1: W191 indentation contains tabs
insta485/api/posts.py:226:1: W191 indentation contains tabs
insta485/api/posts.py:228:1: W191 indentation contains tabs
insta485/api/posts.py:229:1: W191 indentation contains tabs
insta485/api/posts.py:230:1: W191 indentation contains tabs
insta485/api/posts.py:231:1: W191 indentation contains tabs
insta485/api/posts.py:232:1: W191 indentation contains tabs
insta485/api/posts.py:232:7: E128 continuation line under-indented for visual indent
insta485/api/posts.py:233:1: W191 indentation contains tabs
insta485/api/posts.py:233:21: E711 comparison to None should be 'if cond is not None:'
insta485/api/posts.py:234:1: W191 indentation contains tabs
insta485/api/posts.py:236:1: W191 indentation contains tabs
insta485/api/posts.py:237:1: W191 indentation contains tabs
insta485/api/posts.py:237:6: E128 continuation line under-indented for visual indent
insta485/api/posts.py:238:1: W191 indentation contains tabs
insta485/api/posts.py:240:1: W191 indentation contains tabs
insta485/api/posts.py:241:1: W191 indentation contains tabs
insta485/api/posts.py:242:1: W191 indentation contains tabs
insta485/api/posts.py:243:1: W191 indentation contains tabs
insta485/api/posts.py:244:1: W191 indentation contains tabs
insta485/api/posts.py:245:1: W191 indentation contains tabs
insta485/api/posts.py:247:1: W191 indentation contains tabs
insta485/api/posts.py:253:1: W191 indentation contains tabs
insta485/api/posts.py:255:1: W191 indentation contains tabs
insta485/api/posts.py:256:1: W191 indentation contains tabs
insta485/api/posts.py:257:1: W191 indentation contains tabs
insta485/api/posts.py:258:1: W191 indentation contains tabs
insta485/api/posts.py:259:1: W191 indentation contains tabs
insta485/api/posts.py:259:80: E501 line too long (93 > 79 characters)
insta485/api/posts.py:260:1: W191 indentation contains tabs
insta485/api/posts.py:261:1: W191 indentation contains tabs
insta485/api/posts.py:263:1: W191 indentation contains tabs
insta485/api/posts.py:269:1: W191 indentation contains tabs
insta485/api/posts.py:271:1: W191 indentation contains tabs
insta485/api/posts.py:272:1: W191 indentation contains tabs
insta485/api/posts.py:273:1: W191 indentation contains tabs
insta485/api/posts.py:274:1: W191 indentation contains tabs
insta485/api/posts.py:275:1: W191 indentation contains tabs
insta485/api/posts.py:276:1: W191 indentation contains tabs
insta485/api/posts.py:276:5: E101 indentation contains mixed spaces and tabs
insta485/api/posts.py:276:7: E128 continuation line under-indented for visual indent
insta485/api/posts.py:277:1: W191 indentation contains tabs
insta485/api/posts.py:278:1: W191 indentation contains tabs
insta485/api/posts.py:279:1: W191 indentation contains tabs
insta485/api/posts.py:280:1: W191 indentation contains tabs
insta485/api/posts.py:281:1: W191 indentation contains tabs
insta485/api/posts.py:282:1: W191 indentation contains tabs
insta485/api/posts.py:283:1: W191 indentation contains tabs
insta485/api/posts.py:284:1: W191 indentation contains tabs
insta485/api/posts.py:285:1: W191 indentation contains tabs
insta485/api/posts.py:286:1: W191 indentation contains tabs
insta485/api/posts.py:287:1: W191 indentation contains tabs
insta485/api/posts.py:289:1: W191 indentation contains tabs
insta485/api/posts.py:295:1: W191 indentation contains tabs
insta485/api/posts.py:297:1: W191 indentation contains tabs
insta485/api/posts.py:298:1: W191 indentation contains tabs
insta485/api/posts.py:299:1: W191 indentation contains tabs
insta485/api/posts.py:299:80: E501 line too long (82 > 79 characters)
insta485/api/posts.py:300:1: W191 indentation contains tabs
insta485/api/posts.py:301:1: W191 indentation contains tabs
insta485/api/posts.py:301:80: E501 line too long (96 > 79 characters)
insta485/api/posts.py:302:1: W191 indentation contains tabs
insta485/api/posts.py:303:1: W191 indentation contains tabs
insta485/api/posts.py:305:1: W191 indentation contains tabs
insta485/api/posts.py:305:17: W292 no newline at end of file
insta485/views/index.py:21:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:25:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:29:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:33:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:37:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:38:80: E501 line too long (116 > 79 characters)
insta485/views/index.py:39:1: W293 blank line contains whitespace
insta485/views/index.py:40:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:47:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:54:1: W293 blank line contains whitespace
insta485/views/index.py:55:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:65:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:69:5: E122 continuation line missing indentation or outdented
insta485/views/index.py:70:5: E122 continuation line missing indentation or outdented
insta485/views/index.py:77:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:81:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:83:80: E501 line too long (98 > 79 characters)
insta485/views/index.py:84:1: W293 blank line contains whitespace
insta485/views/index.py:85:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:95:74: E231 missing whitespace after ','
insta485/views/index.py:95:80: E501 line too long (135 > 79 characters)
insta485/views/index.py:95:104: E231 missing whitespace after ','
insta485/views/index.py:96:13: E722 do not use bare 'except'
insta485/views/index.py:97:17: E265 block comment should start with '# '
insta485/views/index.py:101:74: E231 missing whitespace after ','
insta485/views/index.py:101:80: E501 line too long (135 > 79 characters)
insta485/views/index.py:101:104: E231 missing whitespace after ','
insta485/views/index.py:102:13: E722 do not use bare 'except'
insta485/views/index.py:103:17: E265 block comment should start with '# '
insta485/views/index.py:107:80: E501 line too long (85 > 79 characters)
insta485/views/index.py:107:85: E502 the backslash is redundant between brackets
insta485/views/index.py:108:21: E128 continuation line under-indented for visual indent
insta485/views/index.py:108:50: E231 missing whitespace after ','
insta485/views/index.py:108:79: E231 missing whitespace after ','
insta485/views/index.py:108:80: E501 line too long (108 > 79 characters)
insta485/views/index.py:109:13: E722 do not use bare 'except'
insta485/views/index.py:110:17: E265 block comment should start with '# '
insta485/views/index.py:113:80: E501 line too long (91 > 79 characters)
insta485/views/index.py:114:9: E128 continuation line under-indented for visual indent
insta485/views/index.py:114:71: E231 missing whitespace after ','
insta485/views/index.py:114:80: E501 line too long (132 > 79 characters)
insta485/views/index.py:114:101: E231 missing whitespace after ','
insta485/views/index.py:124:71: E231 missing whitespace after ','
insta485/views/index.py:124:80: E501 line too long (88 > 79 characters)
insta485/views/index.py:127:76: E231 missing whitespace after ','
insta485/views/index.py:127:80: E501 line too long (94 > 79 characters)
insta485/views/index.py:129:75: E231 missing whitespace after ','
insta485/views/index.py:129:80: E501 line too long (93 > 79 characters)
insta485/views/index.py:131:80: E501 line too long (135 > 79 characters)
insta485/views/index.py:131:88: E231 missing whitespace after ','
insta485/views/index.py:131:104: E231 missing whitespace after ','
insta485/views/index.py:132:48: E225 missing whitespace around operator
insta485/views/index.py:134:25: E231 missing whitespace after ':'
insta485/views/index.py:134:63: E231 missing whitespace after ':'
insta485/views/index.py:137:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:142:68: E231 missing whitespace after ','
insta485/views/index.py:142:80: E501 line too long (101 > 79 characters)
insta485/views/index.py:149:80: E501 line too long (125 > 79 characters)
insta485/views/index.py:155:80: E501 line too long (84 > 79 characters)
insta485/views/index.py:160:56: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:160:58: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:160:80: E501 line too long (88 > 79 characters)
insta485/views/index.py:169:68: E231 missing whitespace after ','
insta485/views/index.py:176:80: E501 line too long (129 > 79 characters)
insta485/views/index.py:183:19: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:185:80: E501 line too long (90 > 79 characters)
insta485/views/index.py:186:80: E501 line too long (87 > 79 characters)
insta485/views/index.py:190:80: E501 line too long (80 > 79 characters)
insta485/views/index.py:196:80: E501 line too long (95 > 79 characters)
insta485/views/index.py:198:80: E501 line too long (104 > 79 characters)
insta485/views/index.py:201:80: E501 line too long (150 > 79 characters)
insta485/views/index.py:203:80: E501 line too long (100 > 79 characters)
insta485/views/index.py:210:5: E303 too many blank lines (2)
insta485/views/index.py:215:1: W293 blank line contains whitespace
insta485/views/index.py:222:79: E231 missing whitespace after ','
insta485/views/index.py:222:80: E501 line too long (96 > 79 characters)
insta485/views/index.py:227:80: E501 line too long (102 > 79 characters)
insta485/views/index.py:227:84: E231 missing whitespace after ','
insta485/views/index.py:230:73: E231 missing whitespace after ','
insta485/views/index.py:230:80: E501 line too long (91 > 79 characters)
insta485/views/index.py:233:80: E501 line too long (143 > 79 characters)
insta485/views/index.py:233:96: E231 missing whitespace after ','
insta485/views/index.py:233:112: E231 missing whitespace after ','
insta485/views/index.py:234:48: E225 missing whitespace around operator
insta485/views/index.py:249:80: E501 line too long (121 > 79 characters)
insta485/views/index.py:252:80: E501 line too long (118 > 79 characters)
insta485/views/index.py:254:1: W293 blank line contains whitespace
insta485/views/index.py:259:15: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:265:1: W293 blank line contains whitespace
insta485/views/index.py:279:80: E501 line too long (143 > 79 characters)
insta485/views/index.py:280:27: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:284:80: E501 line too long (131 > 79 characters)
insta485/views/index.py:292:1: W293 blank line contains whitespace
insta485/views/index.py:293:80: E501 line too long (139 > 79 characters)
insta485/views/index.py:300:15: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:312:25: E231 missing whitespace after ':'
insta485/views/index.py:317:80: E501 line too long (87 > 79 characters)
insta485/views/index.py:317:87: E502 the backslash is redundant between brackets
insta485/views/index.py:318:21: E128 continuation line under-indented for visual indent
insta485/views/index.py:318:50: E231 missing whitespace after ','
insta485/views/index.py:318:80: E501 line too long (81 > 79 characters)
insta485/views/index.py:319:13: E722 do not use bare 'except'
insta485/views/index.py:320:17: E265 block comment should start with '# '
insta485/views/index.py:324:80: E501 line too long (158 > 79 characters)
insta485/views/index.py:324:97: E231 missing whitespace after ','
insta485/views/index.py:324:127: E231 missing whitespace after ','
insta485/views/index.py:325:1: W293 blank line contains whitespace
insta485/views/index.py:330:1: W293 blank line contains whitespace
insta485/views/index.py:332:1: W293 blank line contains whitespace
insta485/views/index.py:333:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:337:5: E265 block comment should start with '# '
insta485/views/index.py:338:25: E231 missing whitespace after ':'
insta485/views/index.py:338:66: E231 missing whitespace after ':'
insta485/views/index.py:339:1: W293 blank line contains whitespace
insta485/views/index.py:342:80: E501 line too long (125 > 79 characters)
insta485/views/index.py:344:1: W293 blank line contains whitespace
insta485/views/index.py:346:80: E501 line too long (127 > 79 characters)
insta485/views/index.py:346:128: W291 trailing whitespace
insta485/views/index.py:349:80: E501 line too long (94 > 79 characters)
insta485/views/index.py:352:80: E501 line too long (121 > 79 characters)
insta485/views/index.py:355:67: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:355:69: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:357:10: W291 trailing whitespace
insta485/views/index.py:358:80: E501 line too long (100 > 79 characters)
insta485/views/index.py:358:100: E502 the backslash is redundant between brackets
insta485/views/index.py:359:13: E128 continuation line under-indented for visual indent
insta485/views/index.py:359:42: E231 missing whitespace after ','
insta485/views/index.py:361:1: W293 blank line contains whitespace
insta485/views/index.py:362:80: E501 line too long (99 > 79 characters)
insta485/views/index.py:362:87: E231 missing whitespace after ','
insta485/views/index.py:364:1: W293 blank line contains whitespace
insta485/views/index.py:367:1: W293 blank line contains whitespace
insta485/views/index.py:369:80: E501 line too long (95 > 79 characters)
insta485/views/index.py:369:83: E231 missing whitespace after ','
insta485/views/index.py:371:80: E501 line too long (95 > 79 characters)
insta485/views/index.py:371:83: E231 missing whitespace after ','
insta485/views/index.py:373:80: E501 line too long (93 > 79 characters)
insta485/views/index.py:373:81: E231 missing whitespace after ','
insta485/views/index.py:379:80: E501 line too long (139 > 79 characters)
insta485/views/index.py:380:54: E711 comparison to None should be 'if cond is not None:'
insta485/views/index.py:381:1: W293 blank line contains whitespace
insta485/views/index.py:382:1: W293 blank line contains whitespace
insta485/views/index.py:383:5: E303 too many blank lines (2)
insta485/views/index.py:384:1: W293 blank line contains whitespace
insta485/views/index.py:385:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:388:5: E265 block comment should start with '# '
insta485/views/index.py:389:5: E265 block comment should start with '# '
insta485/views/index.py:391:25: E231 missing whitespace after ':'
insta485/views/index.py:391:66: E231 missing whitespace after ':'
insta485/views/index.py:392:1: W293 blank line contains whitespace
insta485/views/index.py:396:80: E501 line too long (132 > 79 characters)
insta485/views/index.py:397:1: W293 blank line contains whitespace
insta485/views/index.py:399:80: E501 line too long (135 > 79 characters)
insta485/views/index.py:402:65: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:402:67: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:405:80: E501 line too long (192 > 79 characters)
insta485/views/index.py:408:80: E501 line too long (117 > 79 characters)
insta485/views/index.py:416:1: W293 blank line contains whitespace
insta485/views/index.py:418:1: W293 blank line contains whitespace
insta485/views/index.py:419:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:423:25: E231 missing whitespace after ':'
insta485/views/index.py:423:66: E231 missing whitespace after ':'
insta485/views/index.py:424:1: W293 blank line contains whitespace
insta485/views/index.py:428:80: E501 line too long (132 > 79 characters)
insta485/views/index.py:429:1: W293 blank line contains whitespace
insta485/views/index.py:431:80: E501 line too long (135 > 79 characters)
insta485/views/index.py:434:65: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:434:67: E251 unexpected spaces around keyword / parameter equals
insta485/views/index.py:437:80: E501 line too long (192 > 79 characters)
insta485/views/index.py:440:80: E501 line too long (117 > 79 characters)
insta485/views/index.py:445:1: W293 blank line contains whitespace
insta485/views/index.py:447:1: W293 blank line contains whitespace
insta485/views/index.py:450:1: W293 blank line contains whitespace
insta485/views/index.py:453:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:460:1: W293 blank line contains whitespace
insta485/views/index.py:464:1: W293 blank line contains whitespace
insta485/views/index.py:468:15: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:486:17: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:512:17: E711 comparison to None should be 'if cond is not None:'
insta485/views/index.py:517:80: E501 line too long (80 > 79 characters)
insta485/views/index.py:524:1: W293 blank line contains whitespace
insta485/views/index.py:532:16: E131 continuation line unaligned for hanging indent
insta485/views/index.py:536:1: W293 blank line contains whitespace
insta485/views/index.py:565:16: E131 continuation line unaligned for hanging indent
insta485/views/index.py:605:16: E131 continuation line unaligned for hanging indent
insta485/views/index.py:618:1: W293 blank line contains whitespace
insta485/views/index.py:620:9: E265 block comment should start with '# '
insta485/views/index.py:638:17: E711 comparison to None should be 'if cond is None:'
insta485/views/index.py:647:1: W293 blank line contains whitespace
insta485/views/index.py:653:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:657:1: W293 blank line contains whitespace
insta485/views/index.py:658:1: E302 expected 2 blank lines, found 1
insta485/views/index.py:665:1: W293 blank line contains whitespace
insta485/views/index.py:666:80: E501 line too long (89 > 79 characters)
insta485/views/index.py:672:1: W293 blank line contains whitespace
insta485/views/index.py:693:17: E711 comparison to None should be 'if cond is not None:'
insta485/views/index.py:700:80: E501 line too long (80 > 79 characters)
insta485/views/index.py:708:1: W293 blank line contains whitespace
insta485/views/index.py:738:26: E711 comparison to None should be 'if cond is not None:'
insta485/views/index.py:749:16: E131 continuation line unaligned for hanging indent
insta485/views/index.py:800:9: E265 block comment should start with '# '
insta485/views/index.py:807:16: E131 continuation line unaligned for hanging indent
insta485/views/index.py:858:16: E131 continuation line unaligned for hanging indent
_______________________________ test_pydocstyle ________________________________

    def test_pydocstyle():
        """Run pydocstyle."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run(["pydocstyle", "setup.py", "insta485"], check=True)

tests/test_style.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pydocstyle', 'setup.py', 'insta485'],), kwargs = {}
process = <subprocess.Popen object at 0x7f8f511f0a60>, stdout = None
stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pydocstyle', 'setup.py', 'insta485']' returned non-zero exit status 1.

/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
insta485/api/posts.py:17 in public function `check_password`:
        D103: Missing docstring in public function
insta485/api/posts.py:24 in public function `login_required`:
        D103: Missing docstring in public function
insta485/api/posts.py:57 in public function `list_of_services`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:57 in public function `list_of_services`:
        D400: First line should end with a period (not 'I')
insta485/api/posts.py:72 in public function `ten_posts`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:164 in public function `get_post`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:226 in public function `post_liker`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:253 in public function `post_unliker`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:269 in public function `post_commenter`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/api/posts.py:295 in public function `comment_deleter`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:1 at module level:
        D205: 1 blank line required between summary line and description (found 0)
insta485/views/index.py:22 in public function `error_400`:
        D103: Missing docstring in public function
insta485/views/index.py:26 in public function `error_401`:
        D103: Missing docstring in public function
insta485/views/index.py:30 in public function `error_403`:
        D103: Missing docstring in public function
insta485/views/index.py:34 in public function `error_409`:
        D103: Missing docstring in public function
insta485/views/index.py:37 in public function `read_file`:
        D103: Missing docstring in public function
insta485/views/index.py:40 in public function `check_password`:
        D103: Missing docstring in public function
insta485/views/index.py:47 in public function `login_required`:
        D103: Missing docstring in public function
insta485/views/index.py:55 in public function `generate_password`:
        D103: Missing docstring in public function
insta485/views/index.py:65 in public function `file_uploader`:
        D103: Missing docstring in public function
insta485/views/index.py:77 in public function `profpic_deleter`:
        D103: Missing docstring in public function
insta485/views/index.py:82 in public function `download_file`:
        D103: Missing docstring in public function
insta485/views/index.py:88 in public function `show_index`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:140 in public function `post_ind`:
        D400: First line should end with a period (not 't')
insta485/views/index.py:166 in public function `post`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:166 in public function `post`:
        D400: First line should end with a period (not 'e')
insta485/views/index.py:242 in public function `like`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:242 in public function `like`:
        D400: First line should end with a period (not 't')
insta485/views/index.py:270 in public function `comment`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:270 in public function `comment`:
        D400: First line should end with a period (not 't')
insta485/views/index.py:310 in public function `show_explore`:
        D103: Missing docstring in public function
insta485/views/index.py:335 in public function `show_users`:
        D103: Missing docstring in public function
insta485/views/index.py:387 in public function `show_following`:
        D103: Missing docstring in public function
insta485/views/index.py:421 in public function `show_followers`:
        D103: Missing docstring in public function
insta485/views/index.py:455 in public function `accounts`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:455 in public function `accounts`:
        D400: First line should end with a period (not 'r')
insta485/views/index.py:617 in public function `login`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:617 in public function `login`:
        D400: First line should end with a period (not 'r')
insta485/views/index.py:654 in public function `logout`:
        D103: Missing docstring in public function
insta485/views/index.py:658 in public function `login_permission`:
        D103: Missing docstring in public function
insta485/views/index.py:671 in public function `signup`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:671 in public function `signup`:
        D400: First line should end with a period (not 'r')
insta485/views/index.py:718 in public function `edit`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:718 in public function `edit`:
        D400: First line should end with a period (not 'r')
insta485/views/index.py:782 in public function `delete_account`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:782 in public function `delete_account`:
        D400: First line should end with a period (not 'e')
insta485/views/index.py:819 in public function `change_password`:
        D202: No blank lines allowed after function docstring (found 1)
insta485/views/index.py:819 in public function `change_password`:
        D400: First line should end with a period (not 'd')
_________________________________ test_pylint __________________________________

    def test_pylint():
        """Run pylint."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run([
            "pylint",
            "--rcfile", utils.TEST_DIR/"testdata/pylintrc",
            "--disable=cyclic-import",
            "--disable=assigning-non-slot",
            "--unsafe-load-any-extension=y",
            "setup.py",
            "insta485",
        ], check=True)

tests/test_style.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pylint', '--rcfile', PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/tests/testdata/pylintrc'), '--disable=cyclic-import', '--disable=assigning-non-slot', '--unsafe-load-any-extension=y', ...],)
kwargs = {}, process = <subprocess.Popen object at 0x7f8f5172c100>
stdout = None, stderr = None, retcode = 28

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pylint', '--rcfile', PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/tests/testdata/pylintrc'), '--disable=cyclic-import', '--disable=assigning-non-slot', '--unsafe-load-any-extension=y', 'setup.py', 'insta485']' returned non-zero exit status 28.

/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
************* Module insta485
insta485/__init__.py:25:0: C0305: Trailing newlines (trailing-newlines)
************* Module insta485.config
insta485/config.py:19:0: C0304: Final newline missing (missing-final-newline)
************* Module insta485.model
insta485/model.py:45:0: C0304: Final newline missing (missing-final-newline)
************* Module insta485.api.posts
insta485/api/posts.py:25:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:26:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:27:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:28:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:29:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:30:0: W0311: Bad indentation. Found 4 spaces, expected 16 (bad-indentation)
insta485/api/posts.py:31:0: W0311: Bad indentation. Found 4 spaces, expected 16 (bad-indentation)
insta485/api/posts.py:32:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:33:0: W0311: Bad indentation. Found 4 spaces, expected 16 (bad-indentation)
insta485/api/posts.py:35:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:36:0: W0311: Bad indentation. Found 4 spaces, expected 16 (bad-indentation)
insta485/api/posts.py:38:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:45:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:47:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:48:0: W0311: Bad indentation. Found 4 spaces, expected 16 (bad-indentation)
insta485/api/posts.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:50:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:52:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:53:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:57:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:59:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:66:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:72:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:74:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:76:40: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:76:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:78:0: C0301: Line too long (105/100) (line-too-long)
insta485/api/posts.py:79:31: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:79:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:81:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:82:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:83:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:85:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:86:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:88:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:89:40: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:89:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:94:28: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:96:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:98:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:99:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:100:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:101:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:103:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:104:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:105:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:106:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:107:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:108:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:109:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:110:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:111:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:112:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:113:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:114:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:115:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:117:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:119:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:120:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:121:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:122:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:123:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:124:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:125:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:127:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:128:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:129:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:130:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:131:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:133:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:134:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:135:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:136:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:137:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:138:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:139:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:140:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:141:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:143:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:145:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:146:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:147:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:148:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:149:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:151:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:157:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:164:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:166:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:168:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:169:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:170:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:171:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:173:40: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:173:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:174:26: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/posts.py:176:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:178:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:179:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:180:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:182:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:183:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:184:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:185:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:186:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:187:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:188:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:189:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:190:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:191:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:192:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:193:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:194:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:196:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:198:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:199:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:200:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:201:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:202:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:203:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:204:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:205:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:206:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:207:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:208:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:209:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:210:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:211:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:213:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:214:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:215:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:216:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:217:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:218:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:220:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:226:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:228:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:229:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:230:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:231:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:233:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:234:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:236:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:238:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:240:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:241:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:242:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:247:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:253:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:255:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:256:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:257:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:258:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:259:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:260:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:261:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:263:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:269:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:271:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:272:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:273:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:274:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:275:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:277:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:278:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:279:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:280:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:289:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:295:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:297:0: W0311: Bad indentation. Found 1 spaces, expected 4 (bad-indentation)
insta485/api/posts.py:298:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:299:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:300:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:301:0: W0311: Bad indentation. Found 3 spaces, expected 12 (bad-indentation)
insta485/api/posts.py:302:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:303:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:305:0: C0304: Final newline missing (missing-final-newline)
insta485/api/posts.py:305:0: W0311: Bad indentation. Found 2 spaces, expected 8 (bad-indentation)
insta485/api/posts.py:15:0: W0401: Wildcard import flask (wildcard-import)
insta485/api/posts.py:17:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/posts.py:24:0: C0103: Argument name "f" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:24:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/posts.py:32:3: W0702: No exception type(s) specified (bare-except)
insta485/api/posts.py:47:6: C0121: Comparison 'user == None' should be 'user is None' (singleton-comparison)
insta485/api/posts.py:83:1: W0622: Redefining built-in 'max' (redefined-builtin)
insta485/api/posts.py:146:2: W0622: Redefining built-in 'next' (redefined-builtin)
insta485/api/posts.py:71:0: R0914: Too many local variables (20/15) (too-many-locals)
insta485/api/posts.py:74:1: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:124:2: W0702: No exception type(s) specified (bare-except)
insta485/api/posts.py:71:0: R0915: Too many statements (54/50) (too-many-statements)
insta485/api/posts.py:166:1: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:169:1: C0103: Variable name "ps" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:203:1: W0702: No exception type(s) specified (bare-except)
insta485/api/posts.py:230:2: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:233:5: C0121: Comparison 'cur.fetchone() != None' should be 'cur.fetchone() is not None' (singleton-comparison)
insta485/api/posts.py:225:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
insta485/api/posts.py:256:2: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:252:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
insta485/api/posts.py:274:2: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:268:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
insta485/api/posts.py:298:2: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/api/posts.py:294:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
insta485/api/posts.py:4:0: W0611: Unused import pathlib (unused-import)
insta485/api/posts.py:5:0: W0611: Unused import uuid (unused-import)
insta485/api/posts.py:7:0: W0611: Unused import os (unused-import)
insta485/api/posts.py:8:0: W0611: Unused import shutil (unused-import)
insta485/api/posts.py:9:0: W0611: Unused import io (unused-import)
insta485/api/posts.py:10:0: W0611: Unused import arrow (unused-import)
insta485/api/posts.py:12:0: W0611: Unused import sys (unused-import)
insta485/api/posts.py:15:0: W0614: Unused import escape from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Markup from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import redirect from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import json from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Flask from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Request from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Response from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Blueprint from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import Config from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import after_this_request from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import copy_current_request_context from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import has_app_context from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import has_request_context from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import current_app from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import g from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import request from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import session from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import flash from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import get_flashed_messages from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import get_template_attribute from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import make_response from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import safe_join from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import send_file from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import send_from_directory from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import stream_with_context from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import url_for from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import jsonify from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import appcontext_popped from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import appcontext_pushed from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import appcontext_tearing_down from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import before_render_template from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import got_request_exception from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import message_flashed from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import request_finished from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import request_started from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import request_tearing_down from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import signals_available from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import template_rendered from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import render_template from wildcard import (unused-wildcard-import)
insta485/api/posts.py:15:0: W0614: Unused import render_template_string from wildcard import (unused-wildcard-import)
insta485/api/posts.py:4:0: C0411: standard import "import pathlib" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:5:0: C0411: standard import "import uuid" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:6:0: C0411: standard import "import hashlib" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:7:0: C0411: standard import "import os" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:8:0: C0411: standard import "import shutil" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:9:0: C0411: standard import "import io" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:10:0: C0411: third party import "import arrow" should be placed before "import insta485" (wrong-import-order)
insta485/api/posts.py:12:0: C0411: standard import "import sys" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:14:0: C0411: standard import "from functools import wraps" should be placed before "import flask" (wrong-import-order)
insta485/api/posts.py:15:0: C0411: third party import "from flask import *" should be placed before "import insta485" (wrong-import-order)
************* Module insta485.views.index
insta485/views/index.py:97:17: W0511: fixme (fixme)
insta485/views/index.py:103:17: W0511: fixme (fixme)
insta485/views/index.py:110:17: W0511: fixme (fixme)
insta485/views/index.py:320:17: W0511: fixme (fixme)
insta485/views/index.py:38:0: C0301: Line too long (116/100) (line-too-long)
insta485/views/index.py:39:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:54:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:95:0: C0301: Line too long (135/100) (line-too-long)
insta485/views/index.py:101:0: C0301: Line too long (135/100) (line-too-long)
insta485/views/index.py:108:0: C0301: Line too long (108/100) (line-too-long)
insta485/views/index.py:114:0: C0301: Line too long (132/100) (line-too-long)
insta485/views/index.py:131:0: C0301: Line too long (135/100) (line-too-long)
insta485/views/index.py:142:0: C0301: Line too long (101/100) (line-too-long)
insta485/views/index.py:149:0: C0301: Line too long (125/100) (line-too-long)
insta485/views/index.py:176:0: C0301: Line too long (129/100) (line-too-long)
insta485/views/index.py:198:0: C0301: Line too long (104/100) (line-too-long)
insta485/views/index.py:201:0: C0301: Line too long (150/100) (line-too-long)
insta485/views/index.py:215:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:227:0: C0301: Line too long (102/100) (line-too-long)
insta485/views/index.py:233:0: C0301: Line too long (143/100) (line-too-long)
insta485/views/index.py:249:0: C0301: Line too long (121/100) (line-too-long)
insta485/views/index.py:252:0: C0301: Line too long (118/100) (line-too-long)
insta485/views/index.py:254:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:265:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:279:0: C0301: Line too long (143/100) (line-too-long)
insta485/views/index.py:284:0: C0301: Line too long (131/100) (line-too-long)
insta485/views/index.py:292:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:293:0: C0301: Line too long (139/100) (line-too-long)
insta485/views/index.py:324:0: C0301: Line too long (158/100) (line-too-long)
insta485/views/index.py:325:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:330:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:332:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:339:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:342:0: C0301: Line too long (125/100) (line-too-long)
insta485/views/index.py:344:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:346:127: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:346:0: C0301: Line too long (127/100) (line-too-long)
insta485/views/index.py:352:0: C0301: Line too long (121/100) (line-too-long)
insta485/views/index.py:357:9: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:361:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:364:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:367:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:379:0: C0301: Line too long (139/100) (line-too-long)
insta485/views/index.py:381:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:382:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:384:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:392:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:396:0: C0301: Line too long (132/100) (line-too-long)
insta485/views/index.py:397:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:399:0: C0301: Line too long (135/100) (line-too-long)
insta485/views/index.py:405:0: C0301: Line too long (192/100) (line-too-long)
insta485/views/index.py:408:0: C0301: Line too long (117/100) (line-too-long)
insta485/views/index.py:416:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:418:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:424:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:428:0: C0301: Line too long (132/100) (line-too-long)
insta485/views/index.py:429:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:431:0: C0301: Line too long (135/100) (line-too-long)
insta485/views/index.py:437:0: C0301: Line too long (192/100) (line-too-long)
insta485/views/index.py:440:0: C0301: Line too long (117/100) (line-too-long)
insta485/views/index.py:445:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:447:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:450:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:460:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:464:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:524:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:536:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:618:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:647:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:657:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:665:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:672:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:708:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/views/index.py:19:0: W0401: Wildcard import flask (wildcard-import)
insta485/views/index.py:22:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:22:14: W0613: Unused argument 'error' (unused-argument)
insta485/views/index.py:26:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:26:14: W0613: Unused argument 'error' (unused-argument)
insta485/views/index.py:30:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:30:14: W0613: Unused argument 'error' (unused-argument)
insta485/views/index.py:34:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:34:14: W0613: Unused argument 'error' (unused-argument)
insta485/views/index.py:37:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:38:4: W0612: Unused variable 'dest' (unused-variable)
insta485/views/index.py:40:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:47:0: C0103: Argument name "f" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:55:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:65:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:68:20: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/views/index.py:77:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:82:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:116:8: W0621: Redefining name 'post' from outer scope (line 165) (redefined-outer-name)
insta485/views/index.py:90:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:96:12: W0702: No exception type(s) specified (bare-except)
insta485/views/index.py:102:12: W0702: No exception type(s) specified (bare-except)
insta485/views/index.py:109:12: W0702: No exception type(s) specified (bare-except)
insta485/views/index.py:143:4: W0621: Redefining name 'post' from outer scope (line 165) (redefined-outer-name)
insta485/views/index.py:170:4: W0621: Redefining name 'post' from outer scope (line 165) (redefined-outer-name)
insta485/views/index.py:183:8: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:183:11: C0121: Comparison 'target == None' should be 'target is None' (singleton-comparison)
insta485/views/index.py:259:7: C0121: Comparison 'target == None' should be 'target is None' (singleton-comparison)
insta485/views/index.py:280:11: C0121: Comparison 'cur.fetchone() == None' should be 'cur.fetchone() is None' (singleton-comparison)
insta485/views/index.py:300:7: C0121: Comparison 'target == None' should be 'target is None' (singleton-comparison)
insta485/views/index.py:310:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:311:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:319:12: W0702: No exception type(s) specified (bare-except)
insta485/views/index.py:365:12: W0621: Redefining name 'post' from outer scope (line 165) (redefined-outer-name)
insta485/views/index.py:335:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:336:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:340:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:380:38: C0121: Comparison 'cur.fetchone() != None' should be 'cur.fetchone() is not None' (singleton-comparison)
insta485/views/index.py:387:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:390:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:393:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:421:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:422:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:425:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:454:0: R0914: Too many local variables (18/15) (too-many-locals)
insta485/views/index.py:468:7: C0121: Comparison 'target == None' should be 'target is None' (singleton-comparison)
insta485/views/index.py:473:8: C0103: Variable name "pw" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:486:11: C0121: Comparison 'user == None' should be 'user is None' (singleton-comparison)
insta485/views/index.py:512:11: C0121: Comparison 'user != None' should be 'user is not None' (singleton-comparison)
insta485/views/index.py:549:8: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:553:12: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:555:12: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:454:0: R0912: Too many branches (21/12) (too-many-branches)
insta485/views/index.py:454:0: R0915: Too many statements (81/50) (too-many-statements)
insta485/views/index.py:624:8: C0103: Variable name "pw" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:638:11: C0121: Comparison 'user == None' should be 'user is None' (singleton-comparison)
insta485/views/index.py:641:8: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:616:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
insta485/views/index.py:654:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:658:0: C0103: Argument name "f" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:658:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/views/index.py:673:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:693:11: C0121: Comparison 'user != None' should be 'user is not None' (singleton-comparison)
insta485/views/index.py:720:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:732:8: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:734:8: C0103: Variable name "profpicChange" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:738:11: C0121: Comparison 'profpicChange != None' should be 'profpicChange is not None' (singleton-comparison)
insta485/views/index.py:741:12: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:784:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:798:8: C0103: Variable name "profPic" doesn't conform to snake_case naming style (invalid-name)
insta485/views/index.py:821:4: R1705: Unnecessary "else" after "return" (no-else-return)
insta485/views/index.py:12:0: W0611: Unused import shutil (unused-import)
insta485/views/index.py:13:0: W0611: Unused import io (unused-import)
insta485/views/index.py:19:0: W0614: Unused import escape from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Markup from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import redirect from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import json from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Flask from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Request from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Response from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Blueprint from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import Config from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import after_this_request from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import copy_current_request_context from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import has_app_context from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import has_request_context from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import current_app from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import g from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import session from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import flash from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import get_flashed_messages from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import get_template_attribute from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import make_response from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import safe_join from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import send_file from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import stream_with_context from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import jsonify from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import appcontext_popped from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import appcontext_pushed from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import appcontext_tearing_down from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import before_render_template from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import got_request_exception from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import message_flashed from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import request_finished from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import request_started from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import request_tearing_down from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import signals_available from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import template_rendered from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import render_template from wildcard import (unused-wildcard-import)
insta485/views/index.py:19:0: W0614: Unused import render_template_string from wildcard import (unused-wildcard-import)
insta485/views/index.py:8:0: C0411: standard import "import pathlib" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:9:0: C0411: standard import "import uuid" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:10:0: C0411: standard import "import hashlib" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:11:0: C0411: standard import "import os" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:12:0: C0411: standard import "import shutil" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:13:0: C0411: standard import "import io" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:14:0: C0411: third party import "import arrow" should be placed before "import insta485" (wrong-import-order)
insta485/views/index.py:16:0: C0411: standard import "import sys" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:18:0: C0411: standard import "from functools import wraps" should be placed before "import flask" (wrong-import-order)
insta485/views/index.py:19:0: C0411: third party import "from flask import *" should be placed before "import insta485" (wrong-import-order)
************* Module insta485.views.__init__
insta485/views/__init__.py:1:0: R0801: Similar lines in 2 files
==insta485.api.posts:[1:16]
==insta485.views.index:[5:20]
import flask
import insta485
import pathlib
import uuid
import hashlib
import os
import shutil
import io
import arrow

import sys

from functools import wraps
from flask import *
 (duplicate-code)
insta485/views/__init__.py:1:0: R0801: Similar lines in 2 files
==insta485.api.posts:[16:26]
==insta485.views.index:[39:49]
def check_password(password, password_db_string):
    [algorithm, salt, password_hash] = password_db_string.split("$")
    hash_obj = hashlib.new(algorithm)
    password_salted = salt + password
    hash_obj.update(password_salted.encode('utf-8'))
    return hash_obj.hexdigest() == password_hash

def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs): (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 3.45/10 (previous run: 3.45/10, +0.00)

_________________________________ test_eslint __________________________________

    def test_eslint():
        """Run eslint."""
        assert_no_prohibited_terms("eslint-disable", "jQuery", "XMLHttpRequest")
>       subprocess.run([
            "npx", "eslint",
            "--ext", "js,jsx",
            "--no-inline-config",
            "--no-eslintrc",
            "--config", utils.TEST_DIR/"testdata/eslintrc.js",
            "insta485/js/",
        ], check=True)

tests/test_style.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['npx', 'eslint', '--ext', 'js,jsx', '--no-inline-config', '--no-eslintrc', ...],)
kwargs = {}, process = <subprocess.Popen object at 0x7f8f51732190>
stdout = None, stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['npx', 'eslint', '--ext', 'js,jsx', '--no-inline-config', '--no-eslintrc', '--config', PosixPath('/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/tests/testdata/eslintrc.js'), 'insta485/js/']' returned non-zero exit status 1.

/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------

/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/insta485/js/feed.jsx
   2:8   error  'ReactDOM' is defined but never used                       no-unused-vars
   6:36  error  Block must not be padded by blank lines                    padded-blocks
   8:1   error  Expected indentation of 2 spaces but found 4               indent
   9:1   error  Expected indentation of 4 spaces but found 8               indent
  10:1   error  Expected indentation of 4 spaces but found 8               indent
  11:1   error  Expected indentation of 6 spaces but found 12              indent
  12:1   error  Expected indentation of 6 spaces but found 12              indent
  12:19  error  Strings must use singlequote                               quotes
  13:1   error  Expected indentation of 6 spaces but found 12              indent
  13:18  error  Strings must use singlequote                               quotes
  13:20  error  Missing trailing comma                                     comma-dangle
  14:1   error  Expected indentation of 4 spaces but found 8               indent
  14:10  error  Missing semicolon                                          semi
  15:1   error  Expected indentation of 2 spaces but found 4               indent
  17:1   error  Expected indentation of 2 spaces but found 4               indent
  18:1   error  Expected indentation of 4 spaces but found 8               indent
  20:1   error  Expected indentation of 4 spaces but found 8               indent
  21:1   error  Expected indentation of 6 spaces but found 12              indent
  22:1   error  Expected indentation of 8 spaces but found 16              indent
  23:1   error  Expected indentation of 8 spaces but found 16              indent
  24:1   error  Expected indentation of 6 spaces but found 12              indent
  25:1   error  Expected indentation of 6 spaces but found 12              indent
  26:1   error  Expected indentation of 8 spaces but found 16              indent
  27:1   error  Expected indentation of 10 spaces but found 20             indent
  28:1   error  Expected indentation of 10 spaces but found 20             indent
  29:1   error  Expected indentation of 10 spaces but found 20             indent
  29:34  error  Missing trailing comma                                     comma-dangle
  30:1   error  Expected indentation of 8 spaces but found 16              indent
  30:19  error  Missing semicolon                                          semi
  31:1   error  Expected indentation of 6 spaces but found 12              indent
  32:1   error  Expected indentation of 6 spaces but found 12              indent
  33:1   error  Expected indentation of 2 spaces but found 4               indent
  35:1   error  Expected indentation of 2 spaces but found 4               indent
  36:1   error  Expected indentation of 4 spaces but found 8               indent
  36:24  error  'next' is assigned a value but never used                  no-unused-vars
  36:30  error  'url' is assigned a value but never used                   no-unused-vars
  38:1   error  Expected indentation of 4 spaces but found 8               indent
  38:13  error  Identifier 'rendered_posts' is not in camel case           camelcase
  38:13  error  'rendered_posts' is never reassigned. Use 'const' instead  prefer-const
  38:46  error  Trailing spaces not allowed                                no-trailing-spaces
  39:13  error  Expected no linebreak before this expression               implicit-arrow-linebreak
  39:13  error  Expected indentation of 10 space characters but found 12   react/jsx-indent
  39:13  error  Missing parentheses around multilines JSX                  react/jsx-wrap-multilines
  40:17  error  Expected indentation of 14 space characters but found 16   react/jsx-indent
  41:19  error  Missing trailing comma                                     comma-dangle
  42:1   error  Expected indentation of 4 spaces but found 8               indent
  42:9   error  Unexpected newline before ')'                              function-paren-newline
  44:1   error  Expected indentation of 4 spaces but found 8               indent
  45:13  error  Expected indentation of 10 space characters but found 12   react/jsx-indent
  46:17  error  Expected indentation of 14 space characters but found 16   react/jsx-indent
  46:18  error  Identifier 'rendered_posts' is not in camel case           camelcase
  48:1   error  Expected indentation of 4 spaces but found 8               indent
  49:1   error  Expected indentation of 2 spaces but found 4               indent
  53:1   error  Expected indentation of 2 spaces but found 4               indent
  54:1   error  Expected indentation of 0 spaces but found 2               indent
  55:1   error  Trailing spaces not allowed                                no-trailing-spaces
  56:1   error  Expected indentation of 0 spaces but found 2               indent
  56:23  error  Newline required at end of file but not found              eol-last

/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/insta485/js/main.jsx
  10:3  error  Newline required at end of file but not found  eol-last

/Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/insta485/js/post.jsx
   12:19   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
   25:14   error  Missing trailing comma                                                                                                     comma-dangle
   45:24   error  Strings must use singlequote                                                                                               quotes
   56:24   error  Missing trailing comma                                                                                                     comma-dangle
   60:4    error  Unnecessary semicolon                                                                                                      no-extra-semi
   62:3    error  likeHandler should be placed after handleChange                                                                            react/sort-comp
   63:16   error  Block must not be padded by blank lines                                                                                    padded-blocks
   67:56   error  Missing trailing comma                                                                                                     comma-dangle
   75:25   error  Expected parentheses around arrow function argument                                                                        arrow-parens
   75:38   error  Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`  arrow-body-style
   79:29   error  Missing trailing comma                                                                                                     comma-dangle
   80:14   error  Missing semicolon                                                                                                          semi
   84:5    error  Closing curly brace does not appear on the same line as the subsequent block                                               brace-style
   85:10   error  Block must not be padded by blank lines                                                                                    padded-blocks
   86:1    error  Trailing spaces not allowed                                                                                                no-trailing-spaces
   89:56   error  Missing trailing comma                                                                                                     comma-dangle
   92:13   error  Identifier 'req_api' is not in camel case                                                                                  camelcase
   92:23   error  Unexpected string concatenation                                                                                            prefer-template
   92:23   error  Strings must use singlequote                                                                                               quotes
   99:25   error  Expected parentheses around arrow function argument                                                                        arrow-parens
   99:38   error  Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`  arrow-body-style
   99:39   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  103:33   error  Missing trailing comma                                                                                                     comma-dangle
  104:14   error  Missing semicolon                                                                                                          semi
  109:4    error  Unnecessary semicolon                                                                                                      no-extra-semi
  111:22   error  Block must not be padded by blank lines                                                                                    padded-blocks
  115:54   error  Missing trailing comma                                                                                                     comma-dangle
  123:23   error  Expected parentheses around arrow function argument                                                                        arrow-parens
  124:15   error  Identifier 'com_index' is not in camel case                                                                                camelcase
  125:58   error  Unary operator '++' used                                                                                                   no-plusplus
  126:39   error  Expected '===' and instead saw '=='                                                                                        eqeqeq
  127:15   error  Identifier 'com_index' is not in camel case                                                                                camelcase
  133:41   error  Missing trailing comma                                                                                                     comma-dangle
  134:12   error  Missing semicolon                                                                                                          semi
  140:3    error  Expected to return a value at the end of method 'deleteCommentButtonRender'                                                consistent-return
  144:11   error  Missing an explicit type attribute for button                                                                              react/button-has-type
  144:68   error  Requires a space after '{'                                                                                                 block-spacing
  144:92   error  Requires a space before '}'                                                                                                block-spacing
  144:92   error  Missing semicolon                                                                                                          semi
  144:94   error  There should be no space before '}'                                                                                        react/jsx-curly-spacing
  161:30   error  Unnecessarily quoted property 'text' found                                                                                 quote-props
  161:30   error  Strings must use singlequote                                                                                               quotes
  161:38   error  Must use destructuring state assignment                                                                                    react/destructuring-assignment
  161:63   error  Missing trailing comma                                                                                                     comma-dangle
  164:11   error  Identifier 'req_api' is not in camel case                                                                                  camelcase
  164:21   error  Unexpected string concatenation                                                                                            prefer-template
  164:21   error  Strings must use singlequote                                                                                               quotes
  164:51   error  Must use destructuring state assignment                                                                                    react/destructuring-assignment
  171:23   error  Expected parentheses around arrow function argument                                                                        arrow-parens
  171:37   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  172:40   error  Missing semicolon                                                                                                          semi
  175:26   error  Strings must use singlequote                                                                                               quotes
  175:28   error  Missing trailing comma                                                                                                     comma-dangle
  176:12   error  Missing semicolon                                                                                                          semi
  184:10   error  Must use destructuring state assignment                                                                                    react/destructuring-assignment
  184:41   error  Block must not be padded by blank lines                                                                                    padded-blocks
  185:1    error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  188:56   error  Missing trailing comma                                                                                                     comma-dangle
  191:13   error  Identifier 'req_api' is not in camel case                                                                                  camelcase
  191:23   error  Unexpected string concatenation                                                                                            prefer-template
  191:23   error  Strings must use singlequote                                                                                               quotes
  191:50   error  Must use destructuring state assignment                                                                                    react/destructuring-assignment
  198:25   error  Expected parentheses around arrow function argument                                                                        arrow-parens
  198:38   error  Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`  arrow-body-style
  198:39   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  202:33   error  Missing trailing comma                                                                                                     comma-dangle
  203:14   error  Missing semicolon                                                                                                          semi
  213:11   error  Expected a line break after this opening brace                                                                             object-curly-newline
  213:23   error  Identifier 'new_comment' is not in camel case                                                                              camelcase
  213:45   error  Identifier 'logname_likes_this' is not in camel case                                                                       camelcase
  213:64   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  214:1    error  Expected indentation of 6 spaces but found 12                                                                              indent
  214:23   error  Identifier 'like_url' is not in camel case                                                                                 camelcase
  214:40   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  215:1    error  Expected indentation of 6 spaces but found 12                                                                              indent
  216:1    error  Expected indentation of 6 spaces but found 12                                                                              indent
  216:21   error  'url' is assigned a value but never used                                                                                   no-unused-vars
  216:25   error  Expected a line break before this closing brace                                                                            object-curly-newline
  217:1    error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  218:9    error  'timestamp' is never reassigned. Use 'const' instead                                                                       prefer-const
  219:9    error  'ownerpic' is never reassigned. Use 'const' instead                                                                        prefer-const
  219:20   error  Unexpected string concatenation                                                                                            prefer-template
  219:20   error  Strings must use singlequote                                                                                               quotes
  220:9    error  'postpic' is never reassigned. Use 'const' instead                                                                         prefer-const
  220:19   error  Unexpected string concatenation                                                                                            prefer-template
  220:19   error  Strings must use singlequote                                                                                               quotes
  221:9    error  Identifier 'like_statement' is not in camel case                                                                           camelcase
  221:26   error  Unexpected string concatenation                                                                                            prefer-template
  221:48   error  Strings must use singlequote                                                                                               quotes
  223:9    error  Identifier 'post_comments' is not in camel case                                                                            camelcase
  223:9    error  'post_comments' is never reassigned. Use 'const' instead                                                                   prefer-const
  223:46   error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  224:7    error  Expected no linebreak before this expression                                                                               implicit-arrow-linebreak
  224:7    error  Missing parentheses around multilines JSX                                                                                  react/jsx-wrap-multilines
  225:59   error  `p` must be placed on a new line                                                                                           react/jsx-one-expression-per-line
  230:13   error  Missing trailing comma                                                                                                     comma-dangle
  231:5    error  Unexpected newline before ')'                                                                                              function-paren-newline
  233:18   error  Expected '!==' and instead saw '!='                                                                                        eqeqeq
  234:7    error  Identifier 'like_statement' is not in camel case                                                                           camelcase
  234:25   error  Strings must use singlequote                                                                                               quotes
  237:9    error  Identifier 'like_button_message' is not in camel case                                                                      camelcase
  237:31   error  Strings must use singlequote                                                                                               quotes
  238:9    error  Identifier 'logname_likes_this' is not in camel case                                                                       camelcase
  239:7    error  Identifier 'like_button_message' is not in camel case                                                                      camelcase
  239:29   error  Strings must use singlequote                                                                                               quotes
  250:1    error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  251:81   error  A space is required before closing bracket                                                                                 react/jsx-tag-spacing
  251:84   error  `br` must be placed on a new line                                                                                          react/jsx-one-expression-per-line
  253:9    error  Missing an explicit type attribute for button                                                                              react/button-has-type
  253:63   error  Requires a space after '{'                                                                                                 block-spacing
  253:118  error  Requires a space before '}'                                                                                                block-spacing
  253:118  error  Missing semicolon                                                                                                          semi
  253:120  error  There should be no space before '}'                                                                                        react/jsx-curly-spacing
  254:12   error  Identifier 'like_button_message' is not in camel case                                                                      camelcase
  257:13   error  Identifier 'like_statement' is not in camel case                                                                           camelcase
  257:33   error  `br` must be placed on a new line                                                                                          react/jsx-one-expression-per-line
  259:10   error  Identifier 'post_comments' is not in camel case                                                                            camelcase
  264:37   error  Identifier 'new_comment' is not in camel case                                                                              camelcase
  264:78   error  A space is required before closing bracket                                                                                 react/jsx-tag-spacing
  268:1    error  Trailing spaces not allowed                                                                                                no-trailing-spaces
  278:21   error  Newline required at end of file but not found                                                                              eol-last

✖ 180 problems (180 errors, 0 warnings)
  145 errors and 0 warnings potentially fixable with the `--fix` option.

=============================== warnings summary ===============================
tests/test_index.py: 10 warnings
tests/test_scroll.py: 3 warnings
tests/test_slow_server_index.py: 6 warnings
  /Users/sreyamanchiraju/Documents/eecs485/p3-insta485-clientside/tests/conftest.py:337: UserWarning: The 'environ['werkzeug.server.shutdown']' function is deprecated and will be removed in Werkzeug 2.1.
    shutdown_func()

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED tests/test_index.py::test_feed_load - assert []
FAILED tests/test_index.py::test_new_comment - assert []
FAILED tests/test_index.py::test_delete_comment - assert []
FAILED tests/test_index.py::test_new_comment_delete - assert []
FAILED tests/test_index.py::test_like_unlike - assert []
FAILED tests/test_index.py::test_double_click_like - assert []
FAILED tests/test_index.py::test_refresh - assert []
FAILED tests/test_index.py::test_html - assert []
FAILED tests/test_scroll.py::test_infinite_scroll - assert 400 == 200
FAILED tests/test_scroll.py::test_infinite_scroll_many - assert 400 == 200
FAILED tests/test_scroll.py::test_scroll_refresh - assert 400 == 200
FAILED tests/test_slow_server_index.py::test_feed_load - assert []
FAILED tests/test_slow_server_index.py::test_new_comment - assert []
FAILED tests/test_slow_server_index.py::test_like_unlike - assert []
FAILED tests/test_slow_server_index.py::test_refresh - assert []
FAILED tests/test_style.py::test_pycodestyle - subprocess.CalledProcessError:...
FAILED tests/test_style.py::test_pydocstyle - subprocess.CalledProcessError: ...
FAILED tests/test_style.py::test_pylint - subprocess.CalledProcessError: Comm...
FAILED tests/test_style.py::test_eslint - subprocess.CalledProcessError: Comm...
ERROR tests/test_index.py::test_login - AssertionError: Errors in browser con...
ERROR tests/test_index.py::test_feed_load - AssertionError: Errors in browser...
ERROR tests/test_index.py::test_new_comment - AssertionError: Errors in brows...
ERROR tests/test_index.py::test_delete_comment - AssertionError: Errors in br...
ERROR tests/test_index.py::test_new_comment_delete - AssertionError: Errors i...
ERROR tests/test_index.py::test_like_unlike - AssertionError: Errors in brows...
ERROR tests/test_index.py::test_double_click_like - AssertionError: Errors in...
ERROR tests/test_index.py::test_refresh - AssertionError: Errors in browser c...
ERROR tests/test_index.py::test_html - AssertionError: Errors in browser cons...
ERROR tests/test_slow_server_index.py::test_feed_load - AssertionError: Error...
ERROR tests/test_slow_server_index.py::test_new_comment - AssertionError: Err...
ERROR tests/test_slow_server_index.py::test_like_unlike - AssertionError: Err...
ERROR tests/test_slow_server_index.py::test_refresh - AssertionError: Errors ...
====== 19 failed, 23 passed, 19 warnings, 13 errors in 230.18s (0:03:50) =======
